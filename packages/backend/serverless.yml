service: dsconstruction-backend

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  serverless-offline:
    port: 3001
  webpack:
    includeModules: true
    packager: "yarn"
    individually: true
  s3:
    bucketName: ${cf:dsconstruction-photos-${self:provider.stage}.StagingBucketName}

provider:
  name: aws
  runtime: nodejs8.10
  region: ${opt:region, "ca-central-1"}
  stage: ${opt:stage, "dev"}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:CreateTable
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
        - dynamodb:BatchGetItem
      Resource: arn:aws:dynamodb:ca-central-1:*:table/DSC*
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
      Resource:
        - arn:aws:s3:::${self:custom.s3.bucketName}
        - arn:aws:s3:::${self:custom.s3.bucketName}/*
    - Effect: Allow
      Action:
        - ses:SendRawEmail
      Resource:
        - "*"
  environment:
    SERVERLESS_STAGE: ${self:provider.stage}
    DSC_BUCKET_NAME: ${self:custom.s3.bucketName}

functions:
  home:
    handler: src/index.handler
    events:
      - http:
          path: /api/home
          method: GET
          cors: true
  getServices:
    handler: src/index.handler
    events:
      - http:
          path: /api/services
          method: GET
          cors: true
  destroyServices:
    handler: src/index.handler
    events:
      - http:
          path: /api/services
          method: DELETE
          cors: true
  addService:
    handler: src/index.handler
    events:
      - http:
          path: /api/services
          method: POST
          cors: true
  getGalleryPhotos:
    handler: src/index.handler
    events:
      - http:
          path: /api/gallery
          method: GET
          cors: true
  destroyGalleryPhotos:
    handler: src/index.handler
    events:
      - http:
          path: /api/gallery
          method: DELETE
          cors: true
  addGalleryPhoto:
    handler: src/index.handler
    events:
      - http:
          path: /api/gallery
          method: POST
          cors: true
  getSignedUrl:
    handler: src/index.handler
    events:
      - http:
          path: /api/gallery/url
          method: POST
          cors: true
  toggleTags:
    handler: src/index.handler
    events:
      - http:
          path: /api/gallery/toggle
          method: POST
          cors: true
  getTags:
    handler: src/index.handler
    events:
      - http:
          path: /api/gallery/tags
          method: GET
          cors: true
  destroyTag:
    handler: src/index.handler
    events:
      - http:
          path: /api/gallery/tags
          method: DELETE
          cors: true
  addTag:
    handler: src/index.handler
    events:
      - http:
          path: /api/gallery/tags
          method: POST
          cors: true
  getContactInfo:
    handler: src/index.handler
    events:
      - http:
          path: /api/contact
          method: GET
          cors: true
  sendEmail:
    handler: src/index.handler
    events:
      - http:
          path: /api/contact
          method: POST
          cors: true

  editContactInfo:
    handler: src/index.handler
    events:
      - http:
          path: /api/contact/edit
          method: POST
          cors: true

resources:
  Outputs:
    RecaptchaClientKey:
      Value: ${env:DSC_RECAPTCHA_KEY}
