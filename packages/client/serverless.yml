service: tom-fischer

plugins:
  - serverless-plugin-cloudformation-cross-region-variables
  - serverless-finch
  - serverless-build-client

custom:
  client:
    bucketName: ${self:custom.s3.bucketName}
    distributionFolder: build
    indexDocument: index.html
    errorDocument: index.html
  s3:
    bucketName: tom-fischer-client-${self:provider.stage}
  domain:
    names:
      - tomfischer.ca
      - www.tomfischer.ca
      - fschr.dev
      - www.fschr.dev
      - fisc.dev
      - www.fisc.dev
    certificateArn: arn:aws:acm:us-east-1:899289457458:certificate/a3a7a1ec-6cbc-4cc6-b127-04d0cc4b8b2c
  cloudFront:
    id: TomFischerClient
    hostedZoneId: Z2FDTNDATAQYW2

provider:
  name: aws
  runtime: nodejs8.10
  region: ca-central-1
  stage: ${opt:stage, "prod"}
  environment:
    REACT_APP_BACKEND_ENDPOINT: ${cf:tom-fischer-backend-${self:provider.stage}.ServiceEndpoint}
    # REACT_APP_USER_SERVICE_ENDPOINT: ${cfcr:us-east-1:tom-fischer-users-${self:provider.stage}:ServiceEndpoint}

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3.bucketName}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: ${self:custom.client.indexDocument}
          ErrorDocument: ${self:custom.client.errorDocument}
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: ${self:custom.client.bucketName}.s3-website.ca-central-1.amazonaws.com
              Id: ${self:custom.cloudFront.id}
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
          Enabled: "true"
          Aliases: ${self:custom.domain.names}
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: ${self:custom.cloudFront.id}
            ForwardedValues:
              QueryString: "true"
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.domain.certificateArn}
            SslSupportMethod: sni-only
    TomFischerCaRoute53RecordSet:
      Type: AWS::Route53::RecordSet
      Properties:
        AliasTarget:
          DNSName:
            Fn::GetAtt: [CloudFrontDistribution, DomainName]
          HostedZoneId: ${self:custom.cloudFront.hostedZoneId}
        HostedZoneName: tomfischer.ca.
        Name: tomfischer.ca
        Type: "A"
    WwwTomFischerCaRoute53RecordSet:
      Type: AWS::Route53::RecordSet
      Properties:
        AliasTarget:
          DNSName:
            Fn::GetAtt: [CloudFrontDistribution, DomainName]
          HostedZoneId: ${self:custom.cloudFront.hostedZoneId}
        HostedZoneName: tomfischer.ca.
        Name: www.tomfischer.ca
        Type: "A"
    FschrDevRoute53RecordSet:
      Type: AWS::Route53::RecordSet
      Properties:
        AliasTarget:
          DNSName:
            Fn::GetAtt: [CloudFrontDistribution, DomainName]
          HostedZoneId: ${self:custom.cloudFront.hostedZoneId}
        HostedZoneName: fschr.dev.
        Name: fschr.dev
        Type: "A"
    WwwFschrDevRoute53RecordSet:
      Type: AWS::Route53::RecordSet
      Properties:
        AliasTarget:
          DNSName:
            Fn::GetAtt: [CloudFrontDistribution, DomainName]
          HostedZoneId: ${self:custom.cloudFront.hostedZoneId}
        HostedZoneName: fschr.dev.
        Name: www.fschr.dev
        Type: "A"
    FiscDevRoute53RecordSet:
      Type: AWS::Route53::RecordSet
      Properties:
        AliasTarget:
          DNSName:
            Fn::GetAtt: [CloudFrontDistribution, DomainName]
          HostedZoneId: ${self:custom.cloudFront.hostedZoneId}
        HostedZoneName: fisc.dev.
        Name: fisc.dev
        Type: "A"
    WwwFiscDevRoute53RecordSet:
      Type: AWS::Route53::RecordSet
      Properties:
        AliasTarget:
          DNSName:
            Fn::GetAtt: [CloudFrontDistribution, DomainName]
          HostedZoneId: ${self:custom.cloudFront.hostedZoneId}
        HostedZoneName: fisc.dev.
        Name: www.fisc.dev
        Type: "A"
